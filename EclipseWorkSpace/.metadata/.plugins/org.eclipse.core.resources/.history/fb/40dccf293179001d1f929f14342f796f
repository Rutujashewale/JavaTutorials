import java.sql.Connection;
import java.sql.Statement;
import java.util.*;
class LibraryDriver{
	static List<Book> listOfBooks = LibraryInitializer.loadBookData();
	static List<Student> listOfStudents =LibraryInitializer.loadStudentData();
	static List<Book> rentedBooks=new ArrayList<Book>();
	static Map<Integer,Integer> rentedHash = new HashMap<Integer,Integer>();
	static Connection con = null;
	static  Statement st = null;
	
	public static void main(String args[]){


		System.out.println("List of Books" + listOfBooks);
		System.out.println("List of Students" + listOfStudents);

		manageLibrary();
	}
	public static void manageLibrary(){
		int choice;
		char ch;
		LibraryService libraryService = new LibraryService();
		Scanner s=new Scanner(System.in);
		System.out.println("Choose the option :");
		System.out.println("1.rent a book :");
		System.out.println("2. Check Availability of book :");
		System.out.println("3.Check which student has rented the book :");
		System.out.println("4. Deposit a book :");
		System.out.println("Select from above :");
		choice = s.nextInt();

		switch(choice){
		case 1 :
			System.out.println("Rent a book :");
			System.out.println("Enter the book id :");
			int bookid=s.nextInt();

			System.out.println("Enter StudentId:");
			int studentid=s.nextInt();

			for(int i=0;i<listOfBooks.size();i++){
				Book b = listOfBooks.get(i);
				if(b.id == bookid){

					System.out.println("Book found in the available book list");
					System.out.println("Removing Book from the available book list");
					listOfBooks.remove(b);
					System.out.println("Adding the book to rented books");
					rentedBooks.add(b);

				}
			}

			rentedHash.put(bookid,studentid);

			for(Map.Entry m:rentedHash.entrySet()){  
				System.out.println(m.getKey()+" "+m.getValue());  
			}  
			System.out.println("The available book list");
			for(int i=0;i<listOfBooks.size();i++){
				Book b = listOfBooks.get(i);
				System.out.println(b);

			}
			System.out.println("The rented book list");
			for(int i=0;i<rentedBooks.size();i++){
				Book b = rentedBooks.get(i);
				System.out.println(b);

			} 
			break;

		case 2:
			System.out.println("Check Availability of book");
			System.out.println("Enter the book id :");
			bookid=s.nextInt();
			libraryService.checkAvailability(bookid, listOfBooks);
			break;      

		case 3:

			System.out.println("Check which student has rented the book :");
			System.out.println("Enter the book id :");
			bookid=s.nextInt();

			studentid = rentedHash.get(bookid);
			System.out.println(studentid +" Found in the rentedHashMap");
			for(int i=0;i<listOfStudents.size();i++){
				Student student = listOfStudents.get(i);

				if(student.id == studentid){
					System.out.println("Student found: " +student);
				}
			}

			break;

		case 4:
			System.out.println("Deposit a book :");

			System.out.println("Enter the book id :");
			bookid=s.nextInt();

			rentedHash.get(bookid);
			for(int i=0;i<rentedBooks.size();i++){
				Book b = rentedBooks.get(i);
				if(b.id == bookid){

					System.out.println("Book found in the Rented book list");
					System.out.println("Removing Book from the rented book list");
					rentedBooks.remove(b);
					System.out.println("Adding the book to available books");
					listOfBooks.add(b);

				}
			}

			rentedHash.remove(bookid);


			for(Map.Entry m:rentedHash.entrySet()){  
				System.out.println(m.getKey()+" "+m.getValue());  
			}  
			System.out.println("The available book list");
			for(int i=0;i<listOfBooks.size();i++){
				Book b = listOfBooks.get(i);
				System.out.println(b);

			}
			System.out.println("The rented book list");
			for(int i=0;i<rentedBooks.size();i++){
				Book b = rentedBooks.get(i);
				System.out.println(b);
			}
		default:
			System.out.println("Please enter valid choice :");
			break;

		}
		System.out.println("press Y/N to continue or not :");
		ch=s.next().charAt(0);

		if(ch=='Y' || ch=='y')
		{
			manageLibrary();
		}else
			System.out.println("YOu have entered No :");
	}

}